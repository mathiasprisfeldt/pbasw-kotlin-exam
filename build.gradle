plugins {
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.2.71'
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'org.jetbrains.kotlin.jvm' version '1.2.71'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.2.71'
}

apply plugin: 'kotlin-jpa'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-allopen'

group = 'me.mathiasprisfeldt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

apply plugin: 'kotlin-kapt'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "com.auth0:java-jwt:3.3.0"

	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	runtimeOnly 'com.h2database:h2'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude module: 'junit'
		exclude module: 'mockito-core'
	}

	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation 'com.ninja-squad:springmockk:1.1.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

	developmentOnly("org.springframework.boot:spring-boot-devtools")

	kapt("org.springframework.boot:spring-boot-configuration-processor")
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

test {
	useJUnitPlatform()
}

allOpen {
	annotation("javax.persistence.Entity")
}